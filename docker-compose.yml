version: "3.7"
services:
  pgdb:
    image: postgres:14-alpine
    container_name: ${POSTGRES_NAME}
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: 'UTC'
      PGTZ: 'UTC'
    restart: always
    ports: 
      - '4321:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  exit_server:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.prod 
    image: antangle/exit_server:production
    depends_on:
      - pgdb
    ports:
      - '80:3000'
      - '3001:3001'
    env_file:
      - .env  
    environment:
      - DEVMODE=prod
    volumes:
      - ./logs:/app/logs
      - ./backup:/app/backup
      - /app/node_modules

  pg_admin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - pgdb
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: test@admin.com
      PGADMIN_DEFAULT_PASSWORD: iamadmin
    volumes:
      - ~/pgadmin:/var/lib/pgadmin
    ports:
    - 5050:80

  redis:
    image: redis
    hostname: redis
    container_name: redis
    command: --port 6379
    ports:
      - '6379:6379'
    volumes: 
      - cache:/data
    restart: always

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: unless-stopped
    links:
      - prometheus:prometheus
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=123123
    ports:
      - '3333:3333'

volumes:
  pgdata:
  cache:
    driver: local